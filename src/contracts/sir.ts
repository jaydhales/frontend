import { EContracts, getAddress } from "@/lib/contractAddresses";

export const SirContract = {
  address: getAddress(EContracts.SIR),
  abi: [
    {
      type: "constructor",
      inputs: [{ name: "weth", type: "address", internalType: "address" }],
      stateMutability: "nonpayable",
    },
    { type: "receive", stateMutability: "payable" },
    {
      type: "function",
      name: "DOMAIN_SEPARATOR",
      inputs: [],
      outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "allowance",
      inputs: [
        { name: "", type: "address", internalType: "address" },
        { name: "", type: "address", internalType: "address" },
      ],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "approve",
      inputs: [
        { name: "spender", type: "address", internalType: "address" },
        { name: "amount", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "auctions",
      inputs: [{ name: "token", type: "address", internalType: "address" }],
      outputs: [
        {
          name: "",
          type: "tuple",
          internalType: "struct SirStructs.Auction",
          components: [
            { name: "bidder", type: "address", internalType: "address" },
            { name: "bid", type: "uint96", internalType: "uint96" },
            { name: "startTime", type: "uint40", internalType: "uint40" },
          ],
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "balanceOf",
      inputs: [{ name: "account", type: "address", internalType: "address" }],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "bid",
      inputs: [{ name: "token", type: "address", internalType: "address" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "claim",
      inputs: [],
      outputs: [{ name: "dividends_", type: "uint96", internalType: "uint96" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "collectFeesAndStartAuction",
      inputs: [{ name: "token", type: "address", internalType: "address" }],
      outputs: [
        {
          name: "totalFeesToStakers",
          type: "uint112",
          internalType: "uint112",
        },
      ],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "contributorMint",
      inputs: [],
      outputs: [{ name: "rewards", type: "uint80", internalType: "uint80" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "contributorUnclaimedSIR",
      inputs: [
        { name: "contributor", type: "address", internalType: "address" },
      ],
      outputs: [{ name: "", type: "uint80", internalType: "uint80" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "decimals",
      inputs: [],
      outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "dividends",
      inputs: [{ name: "staker", type: "address", internalType: "address" }],
      outputs: [{ name: "", type: "uint96", internalType: "uint96" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "initialize",
      inputs: [{ name: "vault_", type: "address", internalType: "address" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "lPerMint",
      inputs: [{ name: "vaultId", type: "uint256", internalType: "uint256" }],
      outputs: [{ name: "rewards", type: "uint80", internalType: "uint80" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "maxTotalSupply",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "name",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "nonces",
      inputs: [{ name: "", type: "address", internalType: "address" }],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "payAuctionWinner",
      inputs: [{ name: "token", type: "address", internalType: "address" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "permit",
      inputs: [
        { name: "owner", type: "address", internalType: "address" },
        { name: "spender", type: "address", internalType: "address" },
        { name: "value", type: "uint256", internalType: "uint256" },
        { name: "deadline", type: "uint256", internalType: "uint256" },
        { name: "v", type: "uint8", internalType: "uint8" },
        { name: "r", type: "bytes32", internalType: "bytes32" },
        { name: "s", type: "bytes32", internalType: "bytes32" },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "stake",
      inputs: [{ name: "amount", type: "uint80", internalType: "uint80" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "stakersParams",
      inputs: [{ name: "staker", type: "address", internalType: "address" }],
      outputs: [
        {
          name: "",
          type: "tuple",
          internalType: "struct SirStructs.StakingParams",
          components: [
            { name: "stake", type: "uint80", internalType: "uint80" },
            {
              name: "cumETHPerSIRx80",
              type: "uint176",
              internalType: "uint176",
            },
          ],
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "supply",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "symbol",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "totalBalanceOf",
      inputs: [{ name: "account", type: "address", internalType: "address" }],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "totalSupply",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "transfer",
      inputs: [
        { name: "to", type: "address", internalType: "address" },
        { name: "amount", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "transferFrom",
      inputs: [
        { name: "from", type: "address", internalType: "address" },
        { name: "to", type: "address", internalType: "address" },
        { name: "amount", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "unstake",
      inputs: [{ name: "amount", type: "uint80", internalType: "uint80" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "unstakeAndClaim",
      inputs: [{ name: "amount", type: "uint80", internalType: "uint80" }],
      outputs: [{ name: "dividends_", type: "uint96", internalType: "uint96" }],
      stateMutability: "nonpayable",
    },
    {
      type: "event",
      name: "Approval",
      inputs: [
        {
          name: "owner",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "spender",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "amount",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "AuctionStarted",
      inputs: [
        {
          name: "token",
          type: "address",
          indexed: true,
          internalType: "address",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "AuctionedTokensSentToWinner",
      inputs: [
        {
          name: "winner",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "token",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "reward",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "BidReceived",
      inputs: [
        {
          name: "bidder",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "token",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "previousBid",
          type: "uint96",
          indexed: false,
          internalType: "uint96",
        },
        {
          name: "newBid",
          type: "uint96",
          indexed: false,
          internalType: "uint96",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "DividendsClaimed",
      inputs: [
        {
          name: "staker",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "amount",
          type: "uint96",
          indexed: false,
          internalType: "uint96",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "DividendsPaid",
      inputs: [
        {
          name: "amountETH",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Staked",
      inputs: [
        {
          name: "staker",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "amount",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Transfer",
      inputs: [
        {
          name: "from",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        { name: "to", type: "address", indexed: true, internalType: "address" },
        {
          name: "amount",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Unstaked",
      inputs: [
        {
          name: "staker",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "amount",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    { type: "error", name: "AuctionIsNotOver", inputs: [] },
    { type: "error", name: "BidTooLow", inputs: [] },
    { type: "error", name: "InvalidSigner", inputs: [] },
    { type: "error", name: "NewAuctionCannotStartYet", inputs: [] },
    { type: "error", name: "NoAuction", inputs: [] },
    { type: "error", name: "NoAuctionLot", inputs: [] },
    { type: "error", name: "NoFeesCollectedYet", inputs: [] },
    { type: "error", name: "PermitDeadlineExpired", inputs: [] },
  ] as const,
};
